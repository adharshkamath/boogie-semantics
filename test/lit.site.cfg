# -*- Python -*-

# Configuration file for the 'lit' test runner.

import os
import sys
import re
import platform

import lit.util
import lit.formats

up = os.path.dirname
def repositoryRoot(*args):
    repositoryRoot = up(up(os.path.abspath(__file__)))
    return os.path.join(repositoryRoot, *args)
lit_config.note('Repository root is {}'.format(repositoryRoot()))

lit_config.note('using Python {}'.format(sys.version))

config.name = 'KBoogie'
config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.bpl']

# excludes: A list of directories to exclude from the testsuite. The 'Inputs'
# subdirectories contain auxiliary inputs for various tests in their parent
# directories.
config.excludes = []

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.join(up(os.path.abspath(__file__)))

# test_exec_root: The root path where tests should be run.
config.test_exec_root = config.test_source_root

# Propagate 'HOME' through the environment.
if 'HOME' in os.environ:
    config.environment['HOME'] = os.environ['HOME']

# Propagate 'INCLUDE' through the environment.
if 'INCLUDE' in os.environ:
    config.environment['INCLUDE'] = os.environ['INCLUDE']

# Propagate 'LIB' through the environment.
if 'LIB' in os.environ:
    config.environment['LIB'] = os.environ['LIB']

# Propagate PYTHON_EXECUTABLE into the environment
config.environment['PYTHON_EXECUTABLE'] = getattr(config, 'python_executable', '')

# Check that the object root is known.
if config.test_exec_root is None:
    lit_config.fatal('Could not determine execution root for tests!')

"""
   Function for quoting filepaths
   so that if they contain spaces
   lit's shell interpreter will
   treat the path as a single argument
"""
def quotePath(path):
    if ' ' in path:
        return '"{path}"'.format(path=path)
    else:
        return path

### Add Boogie specific substitutions

# Find Boogie executable
boogieExecutable = repositoryRoot('bin', 'kboogie')
lit_config.note('Using Boogie: {}'.format(boogieExecutable))
config.substitutions.append(('%boogie', boogieExecutable))

diffExecutable = repositoryRoot('bin', 'diff-kboogie')
lit_config.note("Using diff tool: {}".format(diffExecutable))
config.substitutions.append(('%diff', diffExecutable))

# Detect the OutputCheck tool
outputCheckPath = lit.util.which('OutputCheck')
if outputCheckPath == None:
    lit_config.fatal('The OutputCheck tool is not in your PATH. Please install it.')
config.substitutions.append(('%OutputCheck', outputCheckPath + ' --dump-file-to-check'))
